{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","isLoading","hits","payload","nbPages","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","num_comments","points","author","key","href","rel","onClick","Buttons","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.514d23b5.chunk.js","sourcesContent":["import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, isLoading: true }\n    case SET_STORIES:\n      return {\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages,\n      }\n    case REMOVE_STORY:\n      return {\n        ...state,\n        hits: state.hits.filter((story) => story.objectID !== action.payload),\n      }\n    case HANDLE_SEARCH:\n      return { ...state, query: action.payload, page: 0 }\n    case HANDLE_PAGE:\n      if (action.payload === 'inc') {\n        let nextPage = state.page + 1\n        if (nextPage > state.nbPages - 1) {\n          nextPage = 0\n        }\n        return { ...state, page: nextPage }\n      }\n      if (action.payload === 'dec') {\n        let prevPage = state.page - 1\n        if (prevPage < 0) {\n          prevPage = state.nbPages - 1\n        }\n        return { ...state, page: prevPage }\n      }\n    default:\n      throw new Error(`no mathching \"${action.type}\" action type`)\n  }\n}\nexport default reducer\n","export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import React, { useContext, useEffect, useReducer } from 'react'\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\nimport reducer from './reducer'\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages: 0,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const fetchStories = async (url) => {\n    dispatch({ type: SET_LOADING })\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n      dispatch({\n        type: SET_STORIES,\n        payload: { hits: data.hits, nbPages: data.nbPages },\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const removeStory = (id) => {\n    dispatch({ type: REMOVE_STORY, payload: id })\n  }\n  const handleSearch = (query) => {\n    dispatch({ type: HANDLE_SEARCH, payload: query })\n  }\n  const handlePage = (value) => {\n    dispatch({ type: HANDLE_PAGE, payload: value })\n  }\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`)\n  }, [state.query, state.page])\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, removeStory, handleSearch, handlePage }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SearchForm = () => {\n  const { query, handleSearch } = useGlobalContext()\n\n  return (\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\n      <h2>search hacker news</h2>\n      <input\n        type='text'\n        className='form-input'\n        value={query}\n        onChange={(e) => handleSearch(e.target.value)}\n      />\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React from 'react'\n\nimport { useGlobalContext } from './context'\n\nconst Stories = () => {\n  const { isLoading, hits, removeStory } = useGlobalContext()\n\n  if (isLoading) {\n    return <div className='loading'></div>\n  }\n  return (\n    <section className='stories'>\n      {hits.map((story) => {\n        const { objectID, title, num_comments, url, points, author } = story\n        return (\n          <article key={objectID} className='story'>\n            <h4 className='title'>{title}</h4>\n            <p className='info'>\n              {points} points by <span>{author} | </span> {num_comments}{' '}\n              comments\n            </p>\n            <div>\n              <a\n                href={url}\n                className='read-link'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                read more\n              </a>\n              <button\n                className='remove-btn'\n                onClick={() => removeStory(objectID)}\n              >\n                remove\n              </button>\n            </div>\n          </article>\n        )\n      })}\n    </section>\n  )\n}\n\nexport default Stories\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Buttons = () => {\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext()\n\n  return (\n    <div className='btn-container'>\n      <button disabled={isLoading} onClick={() => handlePage('dec')}>\n        prev\n      </button>\n      <p>\n        {page + 1} of {nbPages}\n      </p>\n      <button disabled={isLoading} onClick={() => handlePage('inc')}>\n        next\n      </button>\n    </div>\n  )\n}\n\nexport default Buttons\n","import React from 'react'\nimport SearchForm from './SearchForm'\nimport Stories from './Stories'\nimport Buttons from './Buttons'\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}